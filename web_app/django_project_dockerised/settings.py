"""
Django settings for django_project_dockerised project.

Generated by 'django-admin startproject' using Django 2.2.24.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from dotenv import load_dotenv

# Then initialise all our enviroment variables
load_dotenv()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%s' % os.environ['DJANGO_BACKEND_SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hello_world',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_project_dockerised.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_project_dockerised.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         # to avoid the error: django.db.utils.OperationalError: (1059, "Identifier name 
#         # '/home/cybernetor066/Desktop/Software-IT-Web-Dev/GIT-Repos/FreelanceProjects/cpmrgmtFullStackDjango/p' is too long")
#         # use just a name as value for the NAME key when using mysql database and not a path(MySQL is not a file based system)
#         'NAME': 'trackgovdb',
#         'USER': '%s' % os.environ['DB_USER_NAME'],
#         'PASSWORD': '%s' % os.environ['DB_PASSWORD'],
#         'HOST': '%s' % os.environ['DB_HOST'],
#         'PORT': '5432',
#     }
# }


CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://localhost:6379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient"
        },
        "KEY_PREFIX": "example"
    }
}


# Email
# Email configuration is simple. You just go into your DJANGO_SETTINGS_MODULE (aka settings.py) and add the following:
# ***************************************************************
# Either enable sending mail messages to the console:
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# ***************************************************************
# Or set up the EMAIL_* settings so that Django can send emails:
# EMAIL_HOST = 'smtp.email-host-provider-domain.com'
# EMAIL_HOST_USER = 'yourusername@youremail.com'
# EMAIL_HOST_PASSWORD = 'your password'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# DEFAULT_FROM_EMAIL = 'Your Name <you@email.com>'

# # ***************************************************************
# # EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_USE_TLS = True
# EMAIL_PORT = 587
# EMAIL_HOST_USER = '%s' % os.environ['EMAIL_ADDRESS']
# EMAIL_HOST_PASSWORD = '%s' % os.environ['EMAIL_PASSWORD']
# # DEFAULT_FROM_EMAIL = "Helpdesk <helpdesk@yourdomain>"








# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')




































# """
# Django settings for cpmrgmtWebsite project.

# Generated by 'django-admin startproject' using Django 2.2.12.

# For more information on this file, see
# https://docs.djangoproject.com/en/2.2/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/2.2/ref/settings/
# """

# import os
# from dotenv import load_dotenv

# # Load all ENV Variables
# load_dotenv()



# # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = '%s' % os.environ['MY_SECRET_KEY']

# # SECURITY WARNING: don't run with debug turned on in production!
# # DEBUG = True
# DEBUG = False


# ALLOWED_HOSTS = ['*']
# # ALLOWED_HOSTS = ['127']



# # Application definition

# INSTALLED_APPS = [
#     'therapistApp.apps.TherapistappConfig',
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
# ]

# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'whitenoise.middleware.WhiteNoiseMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'cpmrgmtWebsite.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         # 'DIRS': [os.path.join(BASE_DIR, '../therapistApp/templates/therapistApp')],
#         # 'APP_DIRS': False,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'cpmrgmtWebsite.wsgi.application'


# # Database
# # https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# # DATABASES = {
# #     'default': {
# #         'ENGINE': 'django.db.backends.sqlite3',
# #         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
# #     }
# # }

# # DATABASES = {
# #     'default': {
# #         'ENGINE': 'django.db.backends.mysql',
# #         # to avoid the error: django.db.utils.OperationalError: (1059, "Identifier name 
# #         # '/home/cybernetor066/Desktop/Software-IT-Web-Dev/GIT-Repos/FreelanceProjects/cpmrgmtFullStackDjango/p' is too long")
# #         # use just a name as value for the NAME key when using mysql database and not a path(MySQL is not a file based system)
# #         'NAME': 'therapist_data',
# #         'USER': 'admin',
# #         'PASSWORD': 'rafaelmorales212',
# #         'HOST': '127.0.0.1',
# #         'PORT': '3306',
# #     }
# # }


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         # to avoid the error: django.db.utils.OperationalError: (1059, "Identifier name 
#         # '/home/cybernetor066/Desktop/Software-IT-Web-Dev/GIT-Repos/FreelanceProjects/cpmrgmtFullStackDjango/p' is too long")
#         # use just a name as value for the NAME key when using mysql database and not a path(MySQL is not a file based system)
#         'NAME': 'therapistapp_data',
#         'USER': '%s' % os.environ['USER_NAME'],
#         'PASSWORD': '%s' % os.environ['PASSWORD'],
#         'HOST': '%s' % os.environ['HOST'],
#         'PORT': '3306',
#     }
# }


# # Password validation
# # https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/2.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_L10N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/2.2/howto/static-files/

# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')



























































# """
# Django settings for trackgov project.

# Generated by 'django-admin startproject' using Django 2.2.12.

# For more information on this file, see
# https://docs.djangoproject.com/en/2.2/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/2.2/ref/settings/
# """

# import os, sys
# from dotenv import load_dotenv

# # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/


# # Then initialise all our enviroment variables
# load_dotenv()

# # import warnings
# # warnings.filterwarnings("ignore", message="No directory at", module="whitenoise.base" )

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = '%s' % os.environ['DJANGO_BACKEND_SECRET_KEY']

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
# # DEBUG = False

# # ALLOWED_HOSTS = ['105.112.39.150', '175.36.73.123', '120.154.159.137', '144.138.185.108']
# # ALLOWED_HOSTS = ['105.112.39.150', '127.0.0.1', '175.36.73.123', '120.154.159.137', '144.138.185.108']
# ALLOWED_HOSTS = ['*']

# USE_X_FORWARDED_HOST = True # with or without this line does not matter

# # Application definition

# INSTALLED_APPS = [
#     'django.contrib.sites',
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',

#     'django_comments_xtd',  # Changes/Modifications
#     'django_comments',  # Changes/Modifications

#     'trackgovApp',
# ]



# # Changes/Modifications
# COMMENTS_APP = 'django_comments_xtd'

# COMMENTS_XTD_CONFIRM_EMAIL = False

# COMMENTS_XTD_MAX_THREAD_LEVEL = 1  # default is 0
# COMMENTS_XTD_LIST_ORDER = ('-thread_id', 'order')  # default is ('thread_id', 'order')

# COMMENTS_XTD_APP_MODEL_OPTIONS = {
#     'trackgovApp.houseofrepsbills': {
#         'allow_flagging': True,
#         'allow_feedback': True,
#         'show_feedback': True,
#     }
# }


# # COMMENTS_APP = 'django_comments_xtd'
# # COMMENTS_XTD_MAX_THREAD_LEVEL = 1
# SITE_ID = 2





# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'whitenoise.middleware.WhiteNoiseMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
#     'trackgov.myCustomMiddleware.FilterIPMiddleware',
# ]

# ROOT_URLCONF = 'trackgov.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'trackgov.wsgi.application'


# # # Database
# # # https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# # DATABASES = {
# #     'default': {
# #         'ENGINE': 'django.db.backends.sqlite3',
# #         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),

# #         # Increase timeout
# #         'timeout': 20,
# #     }
# # }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         # to avoid the error: django.db.utils.OperationalError: (1059, "Identifier name 
#         # '/home/cybernetor066/Desktop/Software-IT-Web-Dev/GIT-Repos/FreelanceProjects/cpmrgmtFullStackDjango/p' is too long")
#         # use just a name as value for the NAME key when using mysql database and not a path(MySQL is not a file based system)
#         'NAME': 'trackgovdb',
#         'USER': '%s' % os.environ['DB_USER_NAME'],
#         'PASSWORD': '%s' % os.environ['DB_PASSWORD'],
#         'HOST': '%s' % os.environ['DB_HOST'],
#         'PORT': '5432',
#     }
# }




# # Email
# # Email configuration is simple. You just go into your DJANGO_SETTINGS_MODULE (aka settings.py) and add the following:
# # ***************************************************************
# # Either enable sending mail messages to the console:
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# # ***************************************************************
# # Or set up the EMAIL_* settings so that Django can send emails:
# # EMAIL_HOST = 'smtp.email-host-provider-domain.com'
# # EMAIL_HOST_USER = 'yourusername@youremail.com'
# # EMAIL_HOST_PASSWORD = 'your password'
# # EMAIL_PORT = 587
# # EMAIL_USE_TLS = True
# # DEFAULT_FROM_EMAIL = 'Your Name <you@email.com>'

# # # ***************************************************************
# # # EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# # EMAIL_HOST = 'smtp.gmail.com'
# # EMAIL_USE_TLS = True
# # EMAIL_PORT = 587
# # EMAIL_HOST_USER = '%s' % os.environ['EMAIL_ADDRESS']
# # EMAIL_HOST_PASSWORD = '%s' % os.environ['EMAIL_PASSWORD']
# # # DEFAULT_FROM_EMAIL = "Helpdesk <helpdesk@yourdomain>"



# # Password validation
# # https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/2.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_L10N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/2.2/howto/static-files/

# STATIC_URL = '/static/'
# # STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')












